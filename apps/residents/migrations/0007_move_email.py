# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2025-03-08 17:16
from __future__ import unicode_literals

from django.db import migrations


# noinspection PyUnusedLocal
def backwards_func(apps, schema_editor):
    apps.get_model('residents', 'NewEmail').objects.all().delete()


# noinspection PyUnusedLocal
def forwards_func(apps, schema_editor):
    email_model = apps.get_model('residents', 'Email')
    new_email_model = apps.get_model('residents', 'NewEmail')

    created_emails = {}

    for email in email_model.objects.all():
        email_lowercase = email.email.lower()

        if email_lowercase in created_emails:
            if created_emails[email_lowercase] != email.person:
                raise RuntimeError(
                    f'Conflict: found "{email.email}" for {full_name(created_emails[email_lowercase])} '
                    f'and now for {full_name(email.person)}'
                )
        else:
            new_email = new_email_model.objects.create(email=email.email)
            email.person.new_emails.add(new_email)
            created_emails[email_lowercase] = email.person


def add_suffix(person):
    if person.suffix == 'Esq':
        return f', {person.suffix}'
    else:
        return f' {person.suffix}' if person.suffix else ''


def full_name(person):
    name = f'{person.prefix} ' if person.prefix else ''
    name += f'{person.first_name} {person.last_name}{add_suffix(person)}'

    return name


class Migration(migrations.Migration):

    dependencies = [
        ('residents', '0006_auto_20250308_1225'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func)
    ]
