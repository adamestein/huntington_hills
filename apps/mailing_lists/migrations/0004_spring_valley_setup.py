# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2024-12-20 14:18
from __future__ import unicode_literals

from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations

import upsilonconf

DOMAIN = 'huntingtonhillsinc.website'
EMAIL = 'spring_valley'
ML_NAME = 'Spring Valley'


# noinspection PyUnusedLocal
def backwards_func(apps, schema_editor):
    mailbox = apps.get_model('django_mailbox', 'Mailbox').objects.get(name=ML_NAME)
    apps.get_model('mailing_lists', 'MailingList').objects.get(mailbox=mailbox).delete()
    mailbox.delete()


# noinspection PyUnusedLocal
def forwards_func(apps, schema_editor):
    django_mailbox_model = apps.get_model('django_mailbox', 'Mailbox')
    email_model = apps.get_model('residents', 'Email')
    mailing_list_model = apps.get_model('mailing_lists', 'MailingList')
    person_model = apps.get_model('residents', 'Person')

    bounce_email = f'{EMAIL}-bounces@{DOMAIN}'
    config = upsilonconf.load('.env.json')['Mailing Lists']
    email = f'{EMAIL}@{DOMAIN}'

    mailbox = django_mailbox_model.objects.create(
        name=ML_NAME,
        uri=f'pop3+ssl://{email}:{config["credentials"][ML_NAME].password}@{config.host}:995'
    )

    ml = mailing_list_model.objects.create(
        email=email,
        mailbox=mailbox
    )

    member_emails = [
        'adam@csh.rit.edu',
        'blockemiller@gmail.com',
        'cchungbin@gmail.com',
        'Lisa_DeLouise@urmc.rochester.edu',
        'oliviadioguardi@gmail.com'
    ]

    for member_email in member_emails:
        try:
            email = email_model.objects.get(email=member_email)
        except ObjectDoesNotExist:
            # Can't find email in system, so don't add the person
            pass
        else:
            ml.members.add(email)

    print(f'''

Remember to create 2 emails (if not already done so):

    1) {email}, which is just a regular mailbox AND
    2) {bounce_email}, which is forwarded to the postmaster
''')


class Migration(migrations.Migration):

    dependencies = [
        ('mailing_lists', '0003_auto_20250309_1052'),
        ('residents', '0013_auto_20250308_1651')
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func)
    ]
