# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2024-12-20 14:18
from __future__ import unicode_literals

from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations

from decouple import config

from residents.models import EmailType

EMAIL = 'residents_test'
ML_NAME = 'Residents'


# noinspection PyUnusedLocal
def backwards_func(apps, schema_editor):
    mailbox = apps.get_model('django_mailbox', 'Mailbox').objects.get(name=ML_NAME)
    apps.get_model('mailing_lists', 'MailingList').objects.get(mailbox=mailbox).delete()
    mailbox.delete()


# noinspection PyUnusedLocal
def forwards_func(apps, schema_editor):
    django_mailbox_model = apps.get_model('django_mailbox', 'Mailbox')
    email_model = apps.get_model('residents', 'Email')
    email_type_model = apps.get_model('residents.EmailType')
    mailing_list_model = apps.get_model('mailing_lists', 'MailingList')

    bounce_email = f'{EMAIL}-bounces@huntingtonhillsinc.org'
    email = f'{EMAIL}@huntingtonhillsinc.org'

    mailbox = django_mailbox_model.objects.create(
        name=ML_NAME,
        uri=f'pop3+ssl://{email}:{config("MAILING_LIST_RESIDENTS_PASSWORD")}@{config("MAILING_LISTS_HOST")}:995'
    )

    ml = mailing_list_model.objects.create(
        email=email,
        email_type=email_type_model.objects.get(email_type=EmailType.RESIDENT),
        mailbox=mailbox
    )

    member_emails = [
        'adam@csh.rit.edu',
        'alancooper11@icloud.com',
        'alisonmatich@gmail.com',
        'anne@seabreeze.com',
        'anor013@gmail.com',
        'antoniaorlando@hotmail.com',
        'bboyd@esm.rochester.edu',
        'bcrane263@gmail.com',
        'Becky.Lyons@wegmans.com',
        'bill_appl@yahoo.com',
        'bjc211@frontiernet.net',
        'blockemiller@gmail.com',
        'brankomatich@gmail.com',
        'cburritt@esm.rochester.edu',
        'cchungbin@gmail.com',
        'cdnpaints@gmail.com',
        'colombo@lawyer.com',
        'coreysapp@outlook.com',
        'dekurzdorfer@gmail.com',
        'dennis.kennelly@tylin.com',
        'dlepel@yahoo.com',
        'dmeckert379@gmail.com',
        'domnika@msn.com',
        'dsehlin@aol.com',
        'dtbecker2@mac.com',
        'ed@numzaan.com',
        'fivefields5@yahoo.com',
        'gal60zz16@gmail.com',
        'ghorwitz919@gmail.com',
        'hampars@aol.com',
        'hbernard@rochester.rr.com',
        'hilmar@frontier.com',
        'jared.mooberry@gmail.com',
        'jasmorris@gmail.com',
        'jaykay628@gmail.com',
        'jcf@mflumber.com',
        'jend@rochester.rr.com',
        'jestill1946@gmail.com',
        'JLAHRENS@hotmail.com',
        'jnorris4600@gmail.com',
        'jobellaphia66@yahoo.com',
        'jpetrie@trusmart.com',
        'k2porterhutton@gmail.com',
        'kathynetti@gmail.com',
        'kennellyteresa4@gmail.com',
        'KTestates55@gmail.com',
        'larrymerrillphoto@gmail.com',
        'LBgraham155@aol.com',
        'linda.stevens1956@yahoo.com',
        'Lisa_DeLouise@urmc.rochester.edu',
        'lpetrie@trusmart.com',
        'mahin_maines@urmc.rochester.edu',
        'malitz1967@gmail.com',
        'mburritt@esm.rochester.edu',
        'mcherry001@hotmail.com',
        'nnorton50@yahoo.com',
        'oliviadioguardi@gmail.com',
        'pattyappleton@yahoo.com',
        'pelicansnest@yahoo.com',
        'peterniemi@yahoo.com',
        'pinkyagogo88@aol.com',
        'Pmnetti@gmail.com',
        'pntathome@yahoo.com',
        'prichardfauth@yahoo.com',
        'raott1829@gmail.com',
        'Richoxley@yahoo.com',
        'sagreive@yahoo.com',
        'seruggeri@msn.com',
        'skeaton@keaton-media.com',
        'starzz226@yahoo.com',
        'sus.kram1@gmail.com',
        'Susan.Baechle@gmail.com',
        'susaniannaccone@gmail.com',
        'swilde@rochester.rr.com',
        'tamaragrossman@yahoo.com',
        'tanadad@frontiernet.net',
        'tsick@rochester.rr.com',
        'waynescheuing@gmail.com',
        'wpgcare@gmail.com',
        'zunijlk@rochester.rr.com'
    ]

    for member_email in member_emails:
        try:
            person = email_model.objects.get(email=member_email, email_type__email_type=EmailType.RESIDENT).person
        except ObjectDoesNotExist:
            # Can't find email in system, so don't add the person
            pass
        else:
            ml.members.add(person)

    print(f'''

Remember to create 2 emails (if not already done so):

    1) {email}, which is just a regular mailbox AND
    2) {bounce_email}, which is forwarded to the postmaster
''')


class Migration(migrations.Migration):

    dependencies = [
        ('mailing_lists', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func)
    ]
